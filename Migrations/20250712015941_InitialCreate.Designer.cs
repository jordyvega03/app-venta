// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app_venta.Data;

#nullable disable

namespace app_venta.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250712015941_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("app_venta.Models.Churrasco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Porciones")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Tamaño")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Termino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoCarne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Churrascos");
                });

            modelBuilder.Entity("app_venta.Models.ChurrascoGuarnicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ChurrascoId")
                        .HasColumnType("int");

                    b.Property<int>("GuarnicionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChurrascoId");

                    b.HasIndex("GuarnicionId");

                    b.ToTable("ChurrascoGuarniciones");
                });

            modelBuilder.Entity("app_venta.Models.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("app_venta.Models.ComboChurrasco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ChurrascoId")
                        .HasColumnType("int");

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChurrascoId");

                    b.HasIndex("ComboId");

                    b.ToTable("ComboChurrascos");
                });

            modelBuilder.Entity("app_venta.Models.ComboDulce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<int>("DulceTipicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("DulceTipicoId");

                    b.ToTable("ComboDulces");
                });

            modelBuilder.Entity("app_venta.Models.DulceTipico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadEnCaja")
                        .HasColumnType("int");

                    b.Property<string>("Empaque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoDulce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DulcesTipicos");
                });

            modelBuilder.Entity("app_venta.Models.Guarnicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guarniciones");
                });

            modelBuilder.Entity("app_venta.Models.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("app_venta.Models.ChurrascoGuarnicion", b =>
                {
                    b.HasOne("app_venta.Models.Churrasco", "Churrasco")
                        .WithMany("ChurrascoGuarniciones")
                        .HasForeignKey("ChurrascoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app_venta.Models.Guarnicion", "Guarnicion")
                        .WithMany("ChurrascoGuarniciones")
                        .HasForeignKey("GuarnicionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Churrasco");

                    b.Navigation("Guarnicion");
                });

            modelBuilder.Entity("app_venta.Models.ComboChurrasco", b =>
                {
                    b.HasOne("app_venta.Models.Churrasco", "Churrasco")
                        .WithMany()
                        .HasForeignKey("ChurrascoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app_venta.Models.Combo", "Combo")
                        .WithMany("ComboChurrascos")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Churrasco");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("app_venta.Models.ComboDulce", b =>
                {
                    b.HasOne("app_venta.Models.Combo", "Combo")
                        .WithMany("ComboDulces")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app_venta.Models.DulceTipico", "DulceTipico")
                        .WithMany()
                        .HasForeignKey("DulceTipicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("DulceTipico");
                });

            modelBuilder.Entity("app_venta.Models.Churrasco", b =>
                {
                    b.Navigation("ChurrascoGuarniciones");
                });

            modelBuilder.Entity("app_venta.Models.Combo", b =>
                {
                    b.Navigation("ComboChurrascos");

                    b.Navigation("ComboDulces");
                });

            modelBuilder.Entity("app_venta.Models.Guarnicion", b =>
                {
                    b.Navigation("ChurrascoGuarniciones");
                });
#pragma warning restore 612, 618
        }
    }
}
